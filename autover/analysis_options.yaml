analyzer:
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false

  errors:
    cascade_invocations: error
    unnecessary_const: error
    unnecessary_new: error
    always_declare_return_types: error
    always_put_control_body_on_new_line: error
    always_put_required_named_parameters_first: error
    always_require_non_null_named_parameters: error
    annotate_overrides: error
    avoid_bool_literals_in_conditional_expressions: error
    assignment_to_const: error
    assignment_to_final: error
    avoid_double_and_int_checks: error
    avoid_empty_else: error
    avoid_field_initializers_in_const_classes: error
    avoid_init_to_null: error
    avoid_js_rounded_ints: error
    avoid_null_checks_in_equality_operators: error
    avoid_private_typedef_functions: error
    avoid_relative_lib_imports: error
    avoid_renaming_method_parameters: error
    avoid_return_types_on_setters: error
    avoid_single_cascade_in_expression_statements: error
    avoid_slow_async_io: error
    avoid_types_as_parameter_names: error
    avoid_unused_constructor_parameters: error
    await_only_futures: error
    camel_case_types: error
    cancel_subscriptions: info
    comment_references: error
    control_flow_in_finally: error
    curly_braces_in_flow_control_structures: error
    deprecated_member_use: info
    directives_ordering: error
    duplicate_import: error
    empty_catches: error
    empty_constructor_bodies: error
    empty_statements: error
    file_names: error
    hash_and_equals: error
    implementation_imports: error
    invariant_booleans: error
    invalid_assignment: error
    iterable_contains_unrelated_type: error
    join_return_with_assignment: error
    library_names: error
    library_prefixes: error
    list_remove_unrelated_type: error
    literal_only_boolean_expressions: error
    missing_required_param: info
    missing_return: info
    no_adjacent_strings_in_list: error
    no_duplicate_case_values: error
    non_constant_identifier_names: error
    null_closures: error
    omit_local_variable_types: error
    only_throw_errors: error
    overridden_fields: error
    package_api_docs: error
    package_names: error
    package_prefixed_library_names: error
    parameter_assignments: error
    prefer_adjacent_string_concatenation: error
    prefer_asserts_in_initializer_lists: error
    prefer_bool_in_asserts: error
    prefer_conditional_assignment: error
    prefer_const_constructors: error
    prefer_const_constructors_in_immutables: error
    prefer_constructors_over_static_methods: error
    prefer_contains: error
    prefer_equal_for_default_values: error
    prefer_const_declarations: error
    prefer_const_literals_to_create_immutables: error
    prefer_final_fields: error
    prefer_final_locals: error
    prefer_foreach: error
    prefer_function_declarations_over_variables: error
    prefer_generic_function_type_aliases: error
    prefer_initializing_formals: error
    prefer_is_empty: error
    prefer_is_not_empty: error
    prefer_iterable_whereType: error
    prefer_single_quotes: error
    prefer_typing_uninitialized_variables: error
    recursive_getters: error
    slash_for_doc_comments: error
    sort_unnamed_constructors_first: error
    test_types_in_equals: error
    throw_in_finally: error
    type_annotate_public_apis: error
    type_init_formals: error
    undefined_class: error
    undefined_function: error
    undefined_method: error
    unnecessary_brace_in_string_interps: error
    unnecessary_getters_setters: error
    unnecessary_lambdas: error
    unnecessary_null_aware_assignments: error
    unnecessary_null_in_if_null_operators: error
    unnecessary_overrides: error
    unnecessary_statements: error
    unnecessary_this: error
    unrelated_type_equality_checks: error
    unused_field: error
    unused_local_variable: error
    use_rethrow_when_possible: error
    use_string_buffers: error
    use_to_and_as_if_applicable: error
    valid_regexps: error
    void_checks: error
    unused_import: error
#    prefer_collection_literals: error

# Lint rules and documentation, see http://dart-lang.github.io/linter/lints
linter:
  rules:
    - always_declare_return_types
    - always_put_control_body_on_new_line
    - always_put_required_named_parameters_first
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_bool_literals_in_conditional_expressions
    - avoid_double_and_int_checks
    - avoid_empty_else
    - avoid_field_initializers_in_const_classes
    - avoid_init_to_null
    - avoid_js_rounded_ints
    - avoid_null_checks_in_equality_operators
    - avoid_private_typedef_functions
    - avoid_relative_lib_imports
    - avoid_renaming_method_parameters
    - avoid_return_types_on_setters
    - avoid_single_cascade_in_expression_statements
    - avoid_slow_async_io
    - avoid_types_as_parameter_names
    - avoid_unused_constructor_parameters
    - await_only_futures
    - camel_case_types
    - cancel_subscriptions
    - comment_references
    - control_flow_in_finally
    - curly_braces_in_flow_control_structures
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - empty_statements
    - file_names
    - hash_and_equals
    - implementation_imports
    - invariant_booleans
    - iterable_contains_unrelated_type
    - join_return_with_assignment
    - library_names
    - library_prefixes
    - list_remove_unrelated_type
    - literal_only_boolean_expressions
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - non_constant_identifier_names
    - null_closures
    - omit_local_variable_types
    - only_throw_errors
    - overridden_fields
    - package_api_docs
    - package_names
    - package_prefixed_library_names
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_constructors_over_static_methods
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_final_locals
    - prefer_foreach
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_initializing_formals
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_single_quotes
    - prefer_typing_uninitialized_variables
    - recursive_getters
    - slash_for_doc_comments
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - type_annotate_public_apis
    - type_init_formals
    - unnecessary_brace_in_string_interps
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_null_aware_assignments
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_statements
    - unnecessary_this
    - unrelated_type_equality_checks
    - use_rethrow_when_possible
    - use_string_buffers
    - use_to_and_as_if_applicable
    - valid_regexps
    - void_checks
    - avoid_catches_without_on_clauses
    - avoid_setters_without_getters
    - prefer_expression_function_bodies
    - unnecessary_const
    - unnecessary_new
    - unnecessary_parenthesis
    - use_setters_to_change_properties
#    - cascade_invocations